Given an array consisting of n integers, find the contiguous subarray of given length k that has the maximum average value. And you need to output the maximum average value.

Example 1:
Input: [1,12,-5,-6,50,3], k = 4
Output: 12.75
Explanation: Maximum average is (12-5-6+50)/4 = 51/4 = 12.75
Note:
1 <= k <= n <= 30,000.
Elements of the given array will be in the range [-10,000, 10,000].
*********************
给了数的范围 or没给 要考虑int long等是否够用
public class Solution {
    public double findMaxAverage(int[] nums, int k) {
        int len =nums.length;
        double avg=0;
        int initial=0;
        double temp=0;
        for(int i=0;i<k;i++){
           initial =initial+nums[i];
        }
        temp=initial;
        avg=initial/1.0/k;
        if(k<len){
            for(int n=k;n<len;n++){
            
            temp=temp+nums[n]-nums[n-k];
            avg=Math.max(temp/1.0/k,avg);//！！！！转换类型的时候注意！一定是先除1.0否则结果已经删去小数部分，再进行除就没有意义了
          }
        }
            return avg;
        /* long sum = 0;
        for (int i = 0; i < k; i++) sum += nums[i];//注释中是别人的
        long max = sum;
        
        for (int i = k; i < nums.length; i++) {
            sum += nums[i] - nums[i - k];
            max = Math.max(max, sum);
        }
        
        return max / 1.0 / k;*/
        
        }
        
    }
